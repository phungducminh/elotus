// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: query.sql

package query

import (
	"context"
	"database/sql"
)

const getUserByUsername = `-- name: GetUserByUsername :one
SELECT id, username, hashed_password FROM users
WHERE username = ?
`

func (q *Queries) GetUserByUsername(ctx context.Context, username string) (User, error) {
	row := q.db.QueryRowContext(ctx, getUserByUsername, username)
	var i User
	err := row.Scan(&i.ID, &i.Username, &i.HashedPassword)
	return i, err
}

const insertUser = `-- name: InsertUser :execresult
INSERT INTO users (
    username,
    hashed_password 
) VALUES (
  ?, ?
)
`

type InsertUserParams struct {
	Username       string
	HashedPassword string
}

func (q *Queries) InsertUser(ctx context.Context, arg InsertUserParams) (sql.Result, error) {
	return q.db.ExecContext(ctx, insertUser, arg.Username, arg.HashedPassword)
}
